#lab 5: summary stats
rm(list = ls())

setwd("~/semester 5/WIS 4601/wk5/lab 5 summary stats")
kw = read.table("kestrel_mass_as.txt", header = T)
ks = read.table("Kestrel_states_as.txt", header = T)

plot(mass~sex, data = kw)
#outlier with males

#remove GA data and males
kwf = kw[which(kw$state == "FL" & kw$mass < 180),]
View(kwf)

plot(mass~sex, data = kwf)

#1
#confidence intervals

#means
fmean = mean(kwf$mass[which(kwf$sex == "female")])
mmean = mean(kwf$mass[which(kwf$sex == "male")])

#standard deviation
fsd = sd(kwf$mass[which(kwf$sex == "female")])
msd = sd(kwf$mass[which(kwf$sex == "male")])


#nrow() does NOT work here
#WHY?
length(kwf$sex[which(kwf$sex == "male")])

#standard error: sd/(sgrt n)
fse = fsd / (sqrt(length(kwf$sex[which(kwf$sex == "female")])))
mse = msd / (sqrt(length(kwf$sex[which(kwf$sex == "male")])))

#elsewhere it says 95 confidence interval is 2 standard deviations???
#95 confidence = 2 standard errors
             #or 1.96 standard deviations
UCI_F = fmean + (2*fse)
LCI_F = fmean - (2*fse)
#female
#117.1025 - 121.1435

UCI_M = mmean + (2*mse)
LCI_M = mmean - (2*mse)
#male
#109.4052 - 112.9688


################################################
#confidence intervals
kwf.lm = lm(mass~sex, data = kwf)
prd = predict(kwf.lm, newdata = kwf,
              interval = c("confidence"),
              level = 0.95)
prediction = cbind(kwf, prd)
prediction
#male:
#lower = 109.3088
#upper = 113.0652
#female:
#lower = 117.2448
#upper = 121.0012
################################################


#2
#t test
#check assumptions (normal, variance)

#split data males and females
fkwf = kwf[c(kwf$sex == "female"),]
mkwf = kwf[c(kwf$sex == "male"),]
View(fkwf)

#residuals
fresid = fkwf$mass - fmean
mresid = mkwf$mass - mmean

#normal?
qqnorm(fresid)
#looks normal
hist(fresid)
#looks normal
shapiro.test(fresid)
#p value: 0.108
#statistically significant, not enough data to reject that data is normal

#same for males
qqnorm(mresid)
#looks normal
hist(mresid)
#looks normal
shapiro.test(mresid)
#p value: 0.824
#statistically significant, not enough data to reject that data is normal

##################################
#is this different than checking for normal residuals
qqnorm(mkwf$mass)
hist(mkwf$mass)
shapiro.test(mkwf$mass)
##################################

#variance the same?
install.packages("car",dependencies=TRUE,repos = "http://cran.us.r-project.org")
library(car)

leveneTest(mass~sex, data = kwf)
#it is good, cannot reject null (that the variances are the same)
#p value: 0.372

#t test
#H0: female mass = male mass
#Ha: female mass > male mass
mmean

#male mean: 111.187
t.test(fkwf$mass,
       alternative = c("greater"),
       mu = 111.19)

View(fkwf)

#error: argument "x" missing with no default
#fix: have to have it formatted like this
#p value: 2.478e-12
#do need to reject null
#accept that female mass > male mass

#H0: female = male
#Ha: male < female
t.test(mkwf$mass,
       alternative = c("less"),
       mu = fmean)
#p value: 1.313e-14
#do reject null, sufficient evidence to accept male < female

#??????????????
#################################################
#H0: female = male
#Ha: female < male
t.test(fkwf$mass,
       alternative = c("less"),
       mu = mmean)
#p value: 1
#cannot reject null
#################################################


#3
#ANOVA test
#tells you if means differ, not which mean(s)
#special linear model, discrete data
#H0: means are similar
#Ha: at least one pair differs

View(ks)
summary(ks)
#an extra one in FL
#check data

hist(ks$mass[which(ks$state == "AL")])
hist(ks$mass[which(ks$state == "FL")])
#outlier in FL
hist(ks$mass[which(ks$state == "GA")])
hist(ks$mass[which(ks$state == "SC")])

#take out outlier from FL
ks[which(ks$state == "FL" & ks$mass < 60),]
#101
ks = ks[c(1:100, 102:401),]
rownames(ks) = NULL
#check
summary(ks)
View(ks)

#assumptions: normal distribution, equal variance
#residuals normal, levene test

#means
ALM = mean(ks$state == "AL")
FLM = mean(ks$state == "FL")
GAM = mean(ks$state == "GA")
SCM = mean(ks$state == "SC")

#residuals
ALresid = ks$mass[ks$state == "AL"] - ALM
FLresid = ks$mass[ks$state == "FL"] - FLM
GAresid = ks$mass[ks$state == "GA"] - GAM
SCresid = ks$mass[ks$state == "SC"] - SCM

shapiro.test(ALresid)
#pval: 0.905, do not reject null that data is normal
shapiro.test(FLresid)
#pval: 0.681, do not reject H0
shapiro.test(GAresid)
#pval: 0.174, do not reject H0
shapiro.test(SCresid)
#pval: 0.480, do not reject H0

#Levene test (test variance)
#H0: variances are the same
#Ha: variances are different
#dont use subsetted data here
leveneTest(mass~state, data = ks, var.equal = T)
#pval: 9.37e-5, cannot reject null, variances are the same
#assumptions met

#ANOVA
#H0: all means the same
#Ha: at least one meanis different
summary(ks)
#anova this way
kslm = lm(mass~state, data = ks)
anova(kslm)
#or like this
summary(aov(mass~state, data = ks))
#also see this way
summary(kslm)
#pval: 2e-16, smaller than 0.05 so reject null
#at least one mean is different

#then tukey to determine which pair differs
install.packages("multcomp",dependencies=TRUE,repos = "http://cran.us.r-project.org")
library(multcomp)

#get mean of each state
summary(lm(mass ~ -1 + state, data = ks))
#AL: 127.309
#FL: 111.403
#GA: 128.312
#SC: 130.928

#############################################
#or get means this way
temp = coef(kslm)
temp[1]            #AL: 127.309
temp[1] + temp[2]  #FL: 111.403
temp[1] + temp[3]  #GA: 128.312
temp[1] + temp[4]  #SC: 130.928
#############################################

ksmc = glht(kslm, mcp(state = 'Tukey'))
summary(ksmc)
#anything with FL is different from the other means
#FL - AL p val: <0.001
#GA - FL p val: <0.001
#SC - FL p val: <0.001
#SC - AL p val: 0.0171

#################################################
#TO GRAPH
stateaxis = data.frame(state = c("AL", "FL", "GA", "SC"))
prd = predict(kslm, newdata = stateaxis,
              interval = c("confidence"),
              level = 0.95)
pred = cbind(stateaxis, prd)
pred
#that gives this
#state     fit      lwr      upr
#1    AL 127.309 125.6086 129.0094
#2    FL 111.403 109.7026 113.1034
#3    GA 128.312 126.6116 130.0124
#4    SC 130.928 129.2276 132.6284

#use ggplot 2 to graph
library(ggplot2)
jpeg("ggplot kestrel.jpeg")
ggplot(pred, aes(state, fit)) +
       geom_point(size = 2) +
       geom_errorbar(aes(ymin = lwr, ymax = upr)) +
       labs(x = "State", y = "Mass (g)", title = "Kestrel Mass")
dev.off()

#use barplot to graph
#using the pred data
windows()
jpeg("barplot kestrel.jpeg")
bp = barplot(pred$fit,
             main = "Kestrel Mass by State",
             xlab = "State",
             ylab = "Mass (g)",
             ylim = c(0, 140),
             space = .25,
             axes = T,
             col = "light blue")
View(pred)
arrows(bp,
       pred$upr,
       bp,
       pred$lwr,
       code = 3,
       angle = 90,
       length = 0.125)
axis(side = 1, at = bp,
     labels = c("AL", "FL", "GA", "SC"))
dev.off()
